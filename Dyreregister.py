import streamlit as st
import pandas as pd
import datetime
import gspread
from google.oauth2.service_account import Credentials

# Google Sheets ops√¶tning
SHEET_URL = "https://docs.google.com/spreadsheets/d/1TqBD5etiHRWYsgnKz1O-ZkKn6KobHIPS89wScsq63JY/edit"
SHEET_NAME = "Ark1"
SCOPES = ["https://www.googleapis.com/auth/spreadsheets", "https://www.googleapis.com/auth/drive"]

# ‚úÖ Brug secrets i stedet for lokal fil
credentials = Credentials.from_service_account_info(
    st.secrets["gcp_secret_json"], scopes=SCOPES
)
client = gspread.authorize(credentials)
worksheet = client.open_by_url(SHEET_URL).worksheet(SHEET_NAME)


# Funktion: Gem DataFrame til Google Sheets
def gem_til_google_sheets(df):
    worksheet.clear()
    worksheet.append_row(df.columns.tolist())
    df = df.fillna("")

    # Konverter alle Timestamps og datoer til strenge (dd/mm/yyyy)
    for col in df.columns:
        if pd.api.types.is_datetime64_any_dtype(df[col]):
            df[col] = df[col].dt.strftime("%d/%m/%Y")
        elif df[col].apply(lambda x: isinstance(x, (datetime.date, datetime.datetime))).any():
            df[col] = df[col].apply(lambda x: x.strftime("%d/%m/%Y") if isinstance(x, (datetime.date, datetime.datetime)) else x)

    for row in df.values.tolist():
        worksheet.append_row(row)

# Indl√¶s data fra Google Sheets
def hent_data():
    records = worksheet.get_all_records()
    return pd.DataFrame(records)

df = hent_data()

# --- UI ---
st.title("üêîüê± Dyregister")

# üìÖ Faner per √•r
st.header("üìÖ Faner pr. √•r")
if not df.empty:
    df["K√∏bt/F√∏dt"] = pd.to_datetime(df["K√∏bt/F√∏dt"], errors='coerce', dayfirst=True)
    df["√Ör"] = df["K√∏bt/F√∏dt"].dt.year
    √•rstal = sorted(df["√Ör"].dropna().unique().astype(int).tolist())

    if √•rstal:
        tabs = st.tabs([str(√•r) for √•r in √•rstal])
        for i, √•r in enumerate(√•rstal):
            with tabs[i]:
                st.subheader(f"Dyr i {√•r} ({len(df[df['√Ör'] == √•r])} stk.)")
                for art in df["Art"].unique():
                    art_df = df[(df["√Ör"] == √•r) & (df["Art"] == art)]
                    if not art_df.empty:
                        with st.expander(f"üß¨ {art} ({len(art_df)} stk.)"):
                            visnings_df = art_df.copy()
                            if "K√∏bt/F√∏dt" in visnings_df.columns:
                                visnings_df["K√∏bt/F√∏dt"] = visnings_df["K√∏bt/F√∏dt"].dt.strftime("%d/%m/%Y")
                            st.dataframe(visnings_df, use_container_width=True)


# üìä Opt√¶lling
st.header("üìä Opt√¶lling pr. √•r og art")
if not df.empty:
    opt√¶lling = df.groupby(["√Ör", "Art"]).size().unstack(fill_value=0)
    st.dataframe(opt√¶lling)

# ‚ûï Tilf√∏j nyt dyr
with st.expander("‚ûï Tilf√∏j nyt dyr"):
    with st.form("tilf√∏j_dyr_formular"):
        navn = st.text_input("Navn")
        art = st.text_input("Art")
        kf = st.date_input("K√∏bt/F√∏dt", value=datetime.date.today())
        foder = st.text_area("Foder")
        bem√¶rkninger = st.text_area("Bem√¶rkninger")

        if st.form_submit_button("Tilf√∏j"):
            ny_r√¶kke = pd.DataFrame([{
                "Navn": navn,
                "Art": art,
                "K√∏bt/F√∏dt": kf.strftime("%d/%m/%Y"),
                "D√∏d/Solgt": "",  # Tomt til at starte med
                "Foder": foder,
                "Bem√¶rkninger": bem√¶rkninger
            }])
            df = pd.concat([df, ny_r√¶kke], ignore_index=True)
            gem_til_google_sheets(df)
            st.success(f"{navn} tilf√∏jet.")


# ‚úèÔ∏è Rediger eller slet dyr
with st.expander("‚úèÔ∏è Rediger eller slet eksisterende dyr"):
    if not df.empty:
        selected_index = st.selectbox("V√¶lg r√¶kke der skal redigeres/slettes:", df.index, format_func=lambda i: df.at[i, "Navn"])
        if selected_index is not None:
            navn_edit = st.text_input("Navn", df.at[selected_index, "Navn"])
            art_edit = st.text_input("Art", df.at[selected_index, "Art"])

            # Robust h√•ndtering af datoer
            def hent_dato(kolonne):
                v√¶rdi = df.at[selected_index, kolonne]
                if isinstance(v√¶rdi, str) and v√¶rdi.strip() != "":
                    try:
                        return datetime.datetime.strptime(v√¶rdi.strip(), "%d/%m/%Y").date()
                    except ValueError:
                        return datetime.date.today()
                elif isinstance(v√¶rdi, pd.Timestamp):
                    return v√¶rdi.date()
                elif isinstance(v√¶rdi, datetime.date):
                    return v√¶rdi
                return datetime.date.today()

            kf_edit = st.date_input("K√∏bt/F√∏dt", hent_dato("K√∏bt/F√∏dt"))
            ds_edit = st.date_input("D√∏d/Solgt", hent_dato("D√∏d/Solgt"))

            foder_edit = st.text_area("Foder", df.at[selected_index, "Foder"] if "Foder" in df.columns else "")
            bem_edit = st.text_area("Bem√¶rkninger", df.at[selected_index, "Bem√¶rkninger"] if "Bem√¶rkninger" in df.columns else "")

            col1, col2 = st.columns(2)
            with col1:
                if st.button("üíæ Gem √¶ndringer"):
                    df.at[selected_index, "Navn"] = navn_edit
                    df.at[selected_index, "Art"] = art_edit
                    df.at[selected_index, "K√∏bt/F√∏dt"] = kf_edit.strftime("%d/%m/%Y")
                    df.at[selected_index, "D√∏d/Solgt"] = ds_edit.strftime("%d/%m/%Y") if ds_edit else ""
                    df.at[selected_index, "Foder"] = foder_edit
                    df.at[selected_index, "Bem√¶rkninger"] = bem_edit
                    gem_til_google_sheets(df)
                    st.success("R√¶kke opdateret.")

            with col2:
                if st.button("üóëÔ∏è Slet r√¶kke"):
                    df = df.drop(index=selected_index).reset_index(drop=True)
                    gem_til_google_sheets(df)
                    st.warning("R√¶kke slettet.")
    else:
        st.info("Ingen data at redigere endnu.")

